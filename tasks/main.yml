---
- include_role:
    name: andrewrothstein.unarchivedeps
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: look for install in {{ protoc_install_dir }}
  become: true
  stat:
    path: '{{ protoc_install_dir }}'
  changed_when: false
  register: protoc_binary
- when: not protoc_binary.stat.exists
  block:
    - name: downloading {{ protoc_url }} to {{ protoc_tmp_zip }}
      become: true
      become_user: root
      get_url:
        url: '{{ protoc_url }}'
        dest: '{{ protoc_tmp_zip }}'
        checksum: '{{ protoc_checksum }}'
        mode: '0644'
    - name: mkdir {{ protoc_install_dir }}
      become: true
      become_user: root
      file:
        path: '{{ protoc_install_dir }}'
        state: directory
        mode: 0755
    - name: unarchiving {{ protoc_tmp_zip }}
      become: true
      become_user: root
      unarchive:
        remote_src: true
        src: '{{ protoc_tmp_zip }}'
        dest: '{{ protoc_install_dir }}'
        creates: '{{ protoc_install_dir }}/bin/protoc'
  always:
    - name: rm {{ protoc_tmp_zip }}
      become: true
      become_user: root
      file:
        path: '{{ protoc_tmp_zip }}'
        state: absent
- name: mark executables/directories as executable/readable
  become: true
  become_user: root
  with_items:
    - p: '{{ protoc_install_dir }}/bin'
      t: directory
    - p: '{{ protoc_install_dir }}/include'
      t: directory
    - p: '{{ protoc_install_dir }}/bin/protoc'
      t: file
  file:
    path: '{{ item.p }}'
    mode: '0755'
    state: '{{ item.t }}'
- name: link executables...
  become: true
  become_user: root
  with_items:
    - protoc
  file:
    src: '{{ protoc_install_dir }}/bin/{{ item }}'
    dest: '{{ protoc_parent_install_dir }}/bin/{{ item }}'
    state: link
